;; Analyzed by ClojureScript 1.7.170
{:use-macros {defui om.next, invariant om.next}, :excludes #{var? key replace force}, :name om.next, :imports {Console goog.debug.Console}, :requires {glog goog.log, gstring goog.string, om.next.cache om.next.cache, clojure.zip clojure.zip, p om.next.protocols, om.next.impl.parser om.next.impl.parser, goog.string goog.string, gobj goog.object, goog.object goog.object, walk clojure.walk, goog.log goog.log, util om.util, om.next.protocols om.next.protocols, om.tempid om.tempid, c om.next.cache, parser om.next.impl.parser, transit om.transit, zip clojure.zip, clojure.walk clojure.walk, om.transit om.transit, tempid om.tempid, om.util om.util, Console goog.debug.Console}, :uses nil, :defs {get-props {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 381, :column 8, :end-line 381, :end-column 17, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 381, :end-line 381, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, replace-var {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 199, :column 8, :end-line 199, :end-column 19, :private true, :arglists (quote ([expr params]))}, :private true, :name om.next/replace-var, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([expr params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 2, :fn-var true, :arglists (quote ([expr params]))}, tag {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 288, :column 7, :end-line 288, :end-column 10, :arglists (quote ([x class]))}, :name om.next/tag, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 10, :method-params ([x class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 288, :end-line 288, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x class]))}, db->tree {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1452, :column 7, :end-line 1452, :end-column 15, :arglists (quote ([query data refs] [query data refs map-ident])), :doc "Given a query, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([query data refs] [query data refs map-ident]), :arglists ([query data refs] [query data refs map-ident]), :arglists-meta (nil nil)}}, :name om.next/db->tree, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([query data refs] [query data refs map-ident]), :arglists ([query data refs] [query data refs map-ident]), :arglists-meta (nil nil)}, :method-params ([query data refs] [query data refs map-ident]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1452, :end-line 1452, :max-fixed-arity 4, :fn-var true, :arglists ([query data refs] [query data refs map-ident]), :doc "Given a query, some data in the default database format, and the entire\n   application state in the default database format, return the tree where all\n   ident links have been replaced with their original node values."}, force-root-render! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1973, :column 7, :end-line 1973, :end-column 25, :arglists (quote ([reconciler])), :doc "Force a re-render of the root. Not recommended for anything except\n   recomputing :shared."}, :name om.next/force-root-render!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1973, :end-line 1973, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "Force a re-render of the root. Not recommended for anything except\n   recomputing :shared."}, t {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 436, :column 8, :end-line 436, :end-column 9, :private true, :arglists (quote ([c])), :doc "Get basis t value for when the component last read its props from\n   the global state."}, :private true, :name om.next/t, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 9, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 436, :end-line 436, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Get basis t value for when the component last read its props from\n   the global state."}, tempid? {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1993, :column 16, :end-line 1993, :end-column 23, :tag boolean, :arglists (quote ([x])), :doc "Return true if x is a tempid, false otherwise"}, :name om.next/tempid?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1993, :ret-tag boolean, :end-line 1993, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Return true if x is a tempid, false otherwise"}, get-next-props {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 378, :column 8, :end-line 378, :end-column 22, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-next-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 378, :end-line 378, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, unwrap {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 304, :column 8, :end-line 304, :end-column 14, :private true, :arglists (quote ([om-props]))}, :private true, :name om.next/unwrap, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([om-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 1, :fn-var true, :arglists (quote ([om-props]))}, query {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 184, :column 4, :end-line 184, :end-column 9, :protocol om.next/IQuery, :doc "Return the component's unbound query", :arglists (quote ([this]))}, :protocol om.next/IQuery, :name om.next/query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 184, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the component's unbound query"}, query-template {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 78, :column 8, :end-line 78, :end-column 22, :private true, :arglists (quote ([query path])), :doc "Given a query and a path into a query return a zipper focused at the location\n   specified by the path. This location can be replaced to customize / alter\n   the query."}, :private true, :name om.next/query-template, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([query path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query path])), :doc "Given a query and a path into a query return a zipper focused at the location\n   specified by the path. This location can be replaced to customize / alter\n   the query."}, annotate-mutations {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 872, :column 7, :end-line 872, :end-column 25, :arglists (quote ([tx ident])), :doc "Given a query expression annotate all mutations by adding a :mutator -> ident\n   entry to the metadata of each mutation expression in the query."}, :name om.next/annotate-mutations, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([tx ident]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 872, :end-line 872, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tx ident])), :doc "Given a query expression annotate all mutations by adding a :mutator -> ident\n   entry to the metadata of each mutation expression in the query."}, move-to-key {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 68, :column 8, :end-line 68, :end-column 19, :private true, :arglists (quote ([loc k])), :doc "Move from the current zipper location to the specified key. loc must be a\n   hash map node."}, :private true, :name om.next/move-to-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([loc k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loc k])), :doc "Move from the current zipper location to the specified key. loc must be a\n   hash map node."}, get-prop {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 361, :column 8, :end-line 361, :end-column 16, :private true, :arglists (quote ([c k])), :doc "PRIVATE: Do not use"}, :private true, :name om.next/get-prop, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([c k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 361, :end-line 361, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c k])), :doc "PRIVATE: Do not use"}, ->OmProps {:protocol-inline nil, :meta {:private true, :protocols #{}, :file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :end-column 27, :column 20, :factory :positional, :line 294, :end-line 294, :arglists (quote ([props basis-t])), :skip-protocol-flag nil}, :private true, :protocols #{}, :name om.next/->OmProps, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([props basis-t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 294, :end-line 294, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props basis-t])), :skip-protocol-flag nil}, class-path->queries {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1193, :column 7, :end-line 1193, :end-column 26, :arglists (quote ([x y])), :doc "Given x (a reconciler or indexer) and y (a component or component class\n   path), return the queries for that path."}, :name om.next/class-path->queries, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 26, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1193, :end-line 1193, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "Given x (a reconciler or indexer) and y (a component or component class\n   path), return the queries for that path."}, default-merge {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1568, :column 7, :end-line 1568, :end-column 20, :arglists (quote ([reconciler state res query]))}, :name om.next/default-merge, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([reconciler state res query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1568, :end-line 1568, :max-fixed-arity 4, :fn-var true, :arglists (quote ([reconciler state res query]))}, ITxIntercept {:meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 837, :column 14, :end-line 837, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {tx-intercept [[c tx]]}}}, :protocol-symbol true, :name om.next/ITxIntercept, :file "resources/public/js/om/next.cljs", :end-column 26, :column 1, :line 837, :protocol-info {:methods {tx-intercept [[c tx]]}}, :info nil, :end-line 837, :impls #{}, :doc nil, :jsdoc ("@interface")}, Ident {:meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 173, :column 14, :end-line 173, :end-column 19, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {ident [[this props]]}}}, :protocol-symbol true, :name om.next/Ident, :file "resources/public/js/om/next.cljs", :end-column 19, :column 1, :line 173, :protocol-info {:methods {ident [[this props]]}}, :info nil, :end-line 173, :impls #{}, :doc nil, :jsdoc ("@interface")}, rewrite {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1464, :column 7, :end-line 1464, :end-column 14, :arglists (quote ([rewrite-map result]))}, :name om.next/rewrite, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([rewrite-map result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1464, :end-line 1464, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rewrite-map result]))}, get-rendered-state {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 581, :column 7, :end-line 581, :end-column 25, :arglists (quote ([component])), :doc "Get the rendered state of component. om.next/get-state always returns the\n   up-to-date state."}, :name om.next/get-rendered-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 581, :end-line 581, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Get the rendered state of component. om.next/get-state always returns the\n   up-to-date state."}, react-type {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 462, :column 7, :end-line 462, :end-column 17, :arglists (quote ([x])), :doc "Returns the component type, regardless of whether the component has been\n   mounted"}, :name om.next/react-type, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 462, :end-line 462, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns the component type, regardless of whether the component has been\n   mounted"}, merge! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1575, :column 7, :end-line 1575, :end-column 13, :arglists (quote ([reconciler delta] [reconciler delta query])), :doc "Merge a state delta into the application state. Affected components managed\n   by the reconciler will re-render.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([reconciler delta] [reconciler delta query]), :arglists ([reconciler delta] [reconciler delta query]), :arglists-meta (nil nil)}}, :name om.next/merge!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([reconciler delta] [reconciler delta query]), :arglists ([reconciler delta] [reconciler delta query]), :arglists-meta (nil nil)}, :method-params ([reconciler delta] [reconciler delta query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1575, :end-line 1575, :max-fixed-arity 3, :fn-var true, :arglists ([reconciler delta] [reconciler delta query]), :doc "Merge a state delta into the application state. Affected components managed\n   by the reconciler will re-render."}, -next-props {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 415, :column 7, :end-line 415, :end-column 18, :arglists (quote ([next-props component]))}, :name om.next/-next-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([next-props component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 415, :end-line 415, :max-fixed-arity 2, :fn-var true, :arglists (quote ([next-props component]))}, gather-sends {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 609, :column 7, :end-line 609, :end-column 19, :arglists (quote ([{:keys [parser], :as env} q remotes]))}, :name om.next/gather-sends, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([p__20279 q remotes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 609, :end-line 609, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [parser], :as env} q remotes]))}, set-query! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 645, :column 7, :end-line 645, :end-column 17, :arglists (quote ([x params&query] [x {:keys [params query]} reads])), :doc "Change the query of a component. Takes a map containing :params and/or\n   :query. :params should be a map of new bindings and :query should be a query\n   expression. Will schedule a re-render as well as remote re-sends if\n   necessary.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x params&query] [x {:keys [params query]} reads]), :arglists ([x params&query] [x {:keys [params query]} reads]), :arglists-meta (nil nil)}}, :name om.next/set-query!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x params&query] [x {:keys [params query]} reads]), :arglists ([x params&query] [x {:keys [params query]} reads]), :arglists-meta (nil nil)}, :method-params ([x params&query] [x {:keys [params query]} reads]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 645, :end-line 645, :max-fixed-arity 3, :fn-var true, :arglists ([x params&query] [x {:keys [params query]} reads]), :doc "Change the query of a component. Takes a map containing :params and/or\n   :query. :params should be a map of new bindings and :query should be a query\n   expression. Will schedule a re-render as well as remote re-sends if\n   necessary."}, ref->any {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1181, :column 7, :end-line 1181, :end-column 15, :arglists (quote ([x ref])), :doc "Get any component from the indexer that matches the ref."}, :name om.next/ref->any, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1181, :end-line 1181, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Get any component from the indexer that matches the ref."}, get-component-query {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 230, :column 8, :end-line 230, :end-column 27, :private true, :arglists (quote ([component] [component query-data])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component query-data]), :arglists ([component] [component query-data]), :arglists-meta (nil nil)}}, :private true, :name om.next/get-component-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component query-data]), :arglists ([component] [component query-data]), :arglists-meta (nil nil)}, :method-params ([component] [component query-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component query-data])}, clear-prev-props! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 433, :column 8, :end-line 433, :end-column 25, :private true, :arglists (quote ([c]))}, :private true, :name om.next/clear-prev-props!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 433, :end-line 433, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, props {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 497, :column 7, :end-line 497, :end-column 12, :arglists (quote ([component])), :doc "Return a components props."}, :name om.next/props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 497, :end-line 497, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return a components props."}, -prev-props {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 407, :column 7, :end-line 407, :end-column 18, :arglists (quote ([prev-props component]))}, :name om.next/-prev-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([prev-props component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 407, :end-line 407, :max-fixed-arity 2, :fn-var true, :arglists (quote ([prev-props component]))}, expr->key {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 39, :column 8, :end-line 39, :end-column 17, :private true, :arglists (quote ([expr])), :doc "Given a query expression return its key."}, :private true, :name om.next/expr->key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([expr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([expr])), :doc "Given a query expression return its key."}, get-unbound-query {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 220, :column 7, :end-line 220, :end-column 24, :arglists (quote ([component])), :doc "Return the unbound query for a component."}, :name om.next/get-unbound-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 24, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return the unbound query for a component."}, update-component! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 737, :column 8, :end-line 737, :end-column 25, :private true, :arglists (quote ([c next-props]))}, :private true, :name om.next/update-component!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([c next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 737, :end-line 737, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c next-props]))}, path {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 468, :column 8, :end-line 468, :end-column 12, :private true, :arglists (quote ([c])), :doc "Returns the component's Om data path."}, :private true, :name om.next/path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 468, :end-line 468, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c])), :doc "Returns the component's Om data path."}, to-class {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1234, :column 7, :end-line 1234, :end-column 15, :arglists (quote ([class]))}, :name om.next/to-class, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1234, :end-line 1234, :max-fixed-arity 1, :fn-var true, :arglists (quote ([class]))}, tx-intercept {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 838, :column 4, :end-line 838, :end-column 16, :protocol om.next/ITxIntercept, :doc "An optional protocol that component may implement to intercept child\n     transactions.", :arglists (quote ([c tx]))}, :protocol om.next/ITxIntercept, :name om.next/tx-intercept, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([c tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 837, :end-line 838, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c tx])), :doc "An optional protocol that component may implement to intercept child\n     transactions."}, children {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 732, :column 7, :end-line 732, :end-column 15, :arglists (quote ([component])), :doc "Returns the component's children."}, :name om.next/children, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 732, :end-line 732, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the component's children."}, default-merge-ident {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1752, :column 8, :end-line 1752, :end-column 27, :private true, :arglists (quote ([_ tree ref props]))}, :private true, :name om.next/default-merge-ident, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([_ tree ref props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1752, :end-line 1752, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_ tree ref props]))}, app-root {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1967, :column 7, :end-line 1967, :end-column 15, :arglists (quote ([reconciler])), :doc "Return the application's root component."}, :name om.next/app-root, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1967, :end-line 1967, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "Return the application's root component."}, -set-state! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 187, :column 4, :end-line 187, :end-column 15, :protocol om.next/ILocalState, :doc "Set the component's local state", :arglists (quote ([this new-state]))}, :protocol om.next/ILocalState, :name om.next/-set-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([this new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 187, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this new-state])), :doc "Set the component's local state"}, iquery? {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 242, :column 16, :end-line 242, :end-column 23, :tag boolean, :arglists (quote ([x]))}, :name om.next/iquery?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 242, :ret-tag boolean, :end-line 242, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, var->keyword {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 196, :column 8, :end-line 196, :end-column 20, :private true, :arglists (quote ([x]))}, :private true, :name om.next/var->keyword, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, reduce-query-depth {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1339, :column 7, :end-line 1339, :end-column 25, :arglists (quote ([q k])), :doc "Changes a join on key k with depth limit from [:a {:k n}] to [:a {:k (dec n)}]"}, :name om.next/reduce-query-depth, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([q k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1339, :end-line 1339, :max-fixed-arity 2, :fn-var true, :arglists (quote ([q k])), :doc "Changes a join on key k with depth limit from [:a {:k n}] to [:a {:k (dec n)}]"}, update-props! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 490, :column 8, :end-line 490, :end-column 21, :private true, :arglists (quote ([c next-props]))}, :private true, :name om.next/update-props!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 21, :method-params ([c next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 490, :end-line 490, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c next-props]))}, nil-props {:name om.next/nil-props, :file "resources/public/js/om/next.cljs", :line 302, :column 1, :end-line 302, :end-column 25, :private true, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 302, :column 16, :end-line 302, :end-column 25, :private true}}, should-update? {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 742, :column 7, :end-line 742, :end-column 21, :arglists (quote ([c next-props] [c next-props next-state])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c next-props] [c next-props next-state]), :arglists ([c next-props] [c next-props next-state]), :arglists-meta (nil nil)}}, :name om.next/should-update?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c next-props] [c next-props next-state]), :arglists ([c next-props] [c next-props next-state]), :arglists-meta (nil nil)}, :method-params ([c next-props] [c next-props next-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 742, :end-line 742, :max-fixed-arity 3, :fn-var true, :arglists ([c next-props] [c next-props next-state])}, get-ident {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 779, :column 7, :end-line 779, :end-column 16, :arglists (quote ([x]))}, :name om.next/get-ident, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 779, :end-line 779, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, ast->query {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 935, :column 7, :end-line 935, :end-column 17, :arglists (quote ([query-ast]))}, :name om.next/ast->query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([query-ast]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 935, :end-line 935, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query-ast]))}, om-props {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 296, :column 8, :end-line 296, :end-column 16, :private true, :arglists (quote ([props basis-t]))}, :private true, :name om.next/om-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([props basis-t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 296, :end-line 296, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props basis-t]))}, instrument {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 486, :column 7, :end-line 486, :end-column 17, :arglists (quote ([component]))}, :name om.next/instrument, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 486, :end-line 486, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, om-props-basis {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 299, :column 8, :end-line 299, :end-column 22, :private true, :arglists (quote ([om-props]))}, :private true, :name om.next/om-props-basis, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([om-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 1, :fn-var true, :arglists (quote ([om-props]))}, var? {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 192, :column 8, :end-line 192, :end-column 12, :private true, :arglists (quote ([x]))}, :private true, :name om.next/var?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, map->Reconciler {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1594, :column 12, :end-line 1594, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__20747]))}, :name om.next/map->Reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([G__20747]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 1594, :end-line 1594, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__20747]))}, react-key {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 457, :column 7, :end-line 457, :end-column 16, :arglists (quote ([component])), :doc "Returns the components React key."}, :name om.next/react-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 457, :end-line 457, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the components React key."}, set-state! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 537, :column 7, :end-line 537, :end-column 17, :arglists (quote ([component new-state])), :doc "Set the component local state of the component. Analogous to React's\n   setState."}, :name om.next/set-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 537, :end-line 537, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component new-state])), :doc "Set the component local state of the component. Analogous to React's\n   setState."}, default-migrate {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1762, :column 8, :end-line 1762, :end-column 23, :private true, :arglists (quote ([app-state-pure query tempids] [app-state-pure query tempids id-key])), :doc "Given app-state-pure (the application state as an immutable value), a query,\n   tempids (a hash map from tempid to stable id), and an optional id-key\n   keyword, return a new application state value with the tempids replaced by\n   the stable ids.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([app-state-pure query tempids] [app-state-pure query tempids id-key]), :arglists ([app-state-pure query tempids] [app-state-pure query tempids id-key]), :arglists-meta (nil nil)}}, :private true, :name om.next/default-migrate, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([app-state-pure query tempids] [app-state-pure query tempids id-key]), :arglists ([app-state-pure query tempids] [app-state-pure query tempids id-key]), :arglists-meta (nil nil)}, :method-params ([app-state-pure query tempids] [app-state-pure query tempids id-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1762, :end-line 1762, :max-fixed-arity 4, :fn-var true, :arglists ([app-state-pure query tempids] [app-state-pure query tempids id-key]), :doc "Given app-state-pure (the application state as an immutable value), a query,\n   tempids (a hash map from tempid to stable id), and an optional id-key\n   keyword, return a new application state value with the tempids replaced by\n   the stable ids."}, tree->db {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1317, :column 7, :end-line 1317, :end-column 15, :arglists (quote ([x data] [x data merge-idents])), :doc "Given a Om component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-idents\n   option is true, will return these tables in the result instead of as metadata.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x data] [x data merge-idents]), :arglists ([x data] [x data merge-idents]), :arglists-meta (nil nil)}}, :name om.next/tree->db, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x data] [x data merge-idents]), :arglists ([x data] [x data merge-idents]), :arglists-meta (nil nil)}, :method-params ([x data] [x data merge-idents]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1317, :end-line 1317, :max-fixed-arity 3, :fn-var true, :arglists ([x data] [x data merge-idents]), :doc "Given a Om component class or instance and a tree of data, use the component's\n   query to transform the tree into the default database format. All nodes that\n   can be mapped via Ident implementations wil be replaced with ident links. The\n   original node data will be moved into tables indexed by ident. If merge-idents\n   option is true, will return these tables in the result instead of as metadata."}, component->query-data {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 216, :column 8, :end-line 216, :end-column 29, :private true, :arglists (quote ([component]))}, :private true, :name om.next/component->query-data, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 29, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, from-history {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1980, :column 7, :end-line 1980, :end-column 19, :arglists (quote ([reconciler uuid])), :doc "Given a reconciler and UUID return the application state snapshost\n   from history associated with the UUID. The size of the reconciler history\n   may be configured by the :history option when constructing the reconciler."}, :name om.next/from-history, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([reconciler uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1980, :end-line 1980, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler uuid])), :doc "Given a reconciler and UUID return the application state snapshost\n   from history associated with the UUID. The size of the reconciler history\n   may be configured by the :history option when constructing the reconciler."}, default-ui->props {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1734, :column 8, :end-line 1734, :end-column 25, :private true, :arglists (quote ([{:keys [parser pathopt], :as env} c]))}, :private true, :name om.next/default-ui->props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([p__20786 c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1734, :end-line 1734, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [parser pathopt], :as env} c]))}, to-env {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 842, :column 8, :end-line 842, :end-column 14, :private true, :arglists (quote ([x]))}, :private true, :name om.next/to-env, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 842, :end-line 842, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, process-roots {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1518, :column 7, :end-line 1518, :end-column 20, :arglists (quote ([query]))}, :name om.next/process-roots, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1518, :end-line 1518, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query]))}, parent {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 445, :column 8, :end-line 445, :end-column 14, :private true, :arglists (quote ([component])), :doc "Returns the parent Om component."}, :private true, :name om.next/parent, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 445, :end-line 445, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Returns the parent Om component."}, prev-props* {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 400, :column 8, :end-line 400, :end-column 19, :private true, :arglists (quote ([x y] [x y z])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}}, :private true, :name om.next/prev-props*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}, :method-params ([x y] [x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 400, :end-line 400, :max-fixed-arity 3, :fn-var true, :arglists ([x y] [x y z])}, replace {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 108, :column 8, :end-line 108, :end-column 15, :private true, :arglists (quote ([template new-query]))}, :private true, :name om.next/replace, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([template new-query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 2, :fn-var true, :arglists (quote ([template new-query]))}, computed {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 510, :column 7, :end-line 510, :end-column 15, :arglists (quote ([props computed-map])), :doc "Add computed properties to props. Note will replace any pre-existing\n   computed properties."}, :name om.next/computed, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([props computed-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 510, :end-line 510, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props computed-map])), :doc "Add computed properties to props. Note will replace any pre-existing\n   computed properties."}, force {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 2010, :column 7, :end-line 2010, :end-column 12, :arglists (quote ([expr] [expr target])), :doc "Given a query expression return an equivalent query expression that can be\n   spliced into a transaction that will force a read of that key from the\n   specified remote target.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([expr] [expr target]), :arglists ([expr] [expr target]), :arglists-meta (nil nil)}}, :name om.next/force, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([expr] [expr target]), :arglists ([expr] [expr target]), :arglists-meta (nil nil)}, :method-params ([expr] [expr target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2010, :end-line 2010, :max-fixed-arity 2, :fn-var true, :arglists ([expr] [expr target]), :doc "Given a query expression return an equivalent query expression that can be\n   spliced into a transaction that will force a read of that key from the\n   specified remote target."}, ->Indexer {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 983, :column 12, :end-line 983, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([indexes extfs]))}, :name om.next/->Indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([indexes extfs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 983, :end-line 983, :max-fixed-arity 2, :fn-var true, :arglists (quote ([indexes extfs]))}, focused-join {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 113, :column 8, :end-line 113, :end-column 20, :private true, :arglists (quote ([expr ks]))}, :private true, :name om.next/focused-join, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([expr ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 2, :fn-var true, :arglists (quote ([expr ks]))}, get-prev-props {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 375, :column 8, :end-line 375, :end-column 22, :private true, :arglists (quote ([x]))}, :private true, :name om.next/get-prev-props, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 375, :end-line 375, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, normalize* {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1240, :column 8, :end-line 1240, :end-column 18, :private true, :arglists (quote ([query data refs union-seen]))}, :private true, :name om.next/normalize*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([query data refs union-seen]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1240, :end-line 1240, :max-fixed-arity 4, :fn-var true, :arglists (quote ([query data refs union-seen]))}, props* {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 394, :column 8, :end-line 394, :end-column 14, :private true, :arglists (quote ([x y] [x y z])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}}, :private true, :name om.next/props*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x y] [x y z]), :arglists ([x y] [x y z]), :arglists-meta (nil nil)}, :method-params ([x y] [x y z]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 394, :end-line 394, :max-fixed-arity 3, :fn-var true, :arglists ([x y] [x y z])}, class->any {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1187, :column 7, :end-line 1187, :end-column 17, :arglists (quote ([x class])), :doc "Get any component from the indexer that matches the component class."}, :name om.next/class->any, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([x class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1187, :end-line 1187, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x class])), :doc "Get any component from the indexer that matches the component class."}, mounted? {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 722, :column 16, :end-line 722, :end-column 24, :tag boolean, :arglists (quote ([x])), :doc "Returns true if the component is mounted."}, :name om.next/mounted?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 722, :ret-tag boolean, :end-line 722, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if the component is mounted."}, move-roots {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1472, :column 8, :end-line 1472, :end-column 18, :private true, :arglists (quote ([join result-roots path])), :doc "When given a join `{:join selector-vector}`, roots found so far, and a `path` prefix:\n  returns a (possibly empty) sequence of [re-rooted-join prefix] results.\n  Does NOT support sub-roots. Each re-rooted join will share only\n  one common parent (their common branching point).\n  "}, :private true, :name om.next/move-roots, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([join result-roots path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1472, :end-line 1472, :max-fixed-arity 3, :fn-var true, :arglists (quote ([join result-roots path])), :doc "When given a join `{:join selector-vector}`, roots found so far, and a `path` prefix:\n  returns a (possibly empty) sequence of [re-rooted-join prefix] results.\n  Does NOT support sub-roots. Each re-rooted join will share only\n  one common parent (their common branching point).\n  "}, focus-query {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 122, :column 7, :end-line 122, :end-column 18, :arglists (quote ([query path])), :doc "Given a query, focus it along the specified path.\n\n  Examples:\n    (om.next/focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (om.next/focus-query [{:foo [:bar :baz]} :woz] [:foo :bar])\n    => [{:foo [:bar]}]"}, :name om.next/focus-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([query path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query path])), :doc "Given a query, focus it along the specified path.\n\n  Examples:\n    (om.next/focus-query [:foo :bar :baz] [:foo])\n    => [:foo]\n\n    (om.next/focus-query [{:foo [:bar :baz]} :woz] [:foo :bar])\n    => [{:foo [:bar]}]"}, -merge-pending-state! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 190, :column 4, :end-line 190, :end-column 25, :protocol om.next/ILocalState, :doc "Get the component's pending local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-merge-pending-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 190, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's pending local state"}, default-merge-tree {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1756, :column 8, :end-line 1756, :end-column 26, :private true, :arglists (quote ([a b]))}, :private true, :name om.next/default-merge-tree, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 26, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1756, :end-line 1756, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b]))}, *reconciler* {:name om.next/*reconciler*, :file "resources/public/js/om/next.cljs", :line 27, :column 1, :end-line 27, :end-column 49, :dynamic true, :private true, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 27, :column 37, :end-line 27, :end-column 49, :dynamic true, :private true}}, denormalize* {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1359, :column 8, :end-line 1359, :end-column 20, :private true, :arglists (quote ([query data refs map-ident idents-seen union-expr recurse-key])), :doc "Denormalize a data based on query. refs is a data structure which maps idents\n   to their values. map-ident is a function taking a ident to another ident,\n   used during tempid transition. idents-seen is the set of idents encountered,\n   used to limit recursion. union-expr is the current union expression being\n   evaluated. recurse-key is key representing the current recursive query being\n   evaluted."}, :private true, :name om.next/denormalize*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([query data refs map-ident idents-seen union-expr recurse-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1359, :end-line 1359, :max-fixed-arity 7, :fn-var true, :arglists (quote ([query data refs map-ident idents-seen union-expr recurse-key])), :doc "Denormalize a data based on query. refs is a data structure which maps idents\n   to their values. map-ident is a function taking a ident to another ident,\n   used during tempid transition. idents-seen is the set of idents encountered,\n   used to limit recursion. union-expr is the current union expression being\n   evaluated. recurse-key is key representing the current recursive query being\n   evaluted."}, merge-novelty! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1555, :column 8, :end-line 1555, :end-column 22, :private true, :arglists (quote ([reconciler state res query]))}, :private true, :name om.next/merge-novelty!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([reconciler state res query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1555, :end-line 1555, :max-fixed-arity 4, :fn-var true, :arglists (quote ([reconciler state res query]))}, IQuery {:meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 183, :column 14, :end-line 183, :end-column 20, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {query [[this]]}}}, :protocol-symbol true, :name om.next/IQuery, :file "resources/public/js/om/next.cljs", :end-column 20, :column 1, :line 183, :protocol-info {:methods {query [[this]]}}, :info nil, :end-line 183, :impls #{}, :doc nil, :jsdoc ("@interface")}, get-computed {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 521, :column 7, :end-line 521, :end-column 19, :arglists (quote ([x] [x k-or-ks])), :doc "Return the computed properties on a component or its props.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x k-or-ks]), :arglists ([x] [x k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/get-computed, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x k-or-ks]), :arglists ([x] [x k-or-ks]), :arglists-meta (nil nil)}, :method-params ([x] [x k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 521, :end-line 521, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x k-or-ks]), :doc "Return the computed properties on a component or its props."}, get-state {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 551, :column 7, :end-line 551, :end-column 16, :arglists (quote ([component] [component k-or-ks])), :doc "Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/get-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}, :method-params ([component] [component k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 551, :end-line 551, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component k-or-ks]), :doc "Get a component's local state. May provide a single key or a sequential\n   collection of keys for indexed access into the component's local state."}, *parent* {:name om.next/*parent*, :file "resources/public/js/om/next.cljs", :line 28, :column 1, :end-line 28, :end-column 45, :dynamic true, :private true, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 28, :column 37, :end-line 28, :end-column 45, :dynamic true, :private true}}, update-state! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 565, :column 7, :end-line 565, :end-column 20, :arglists (quote ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest])), :doc "Update a component's local state. Similar to Clojure(Script)'s swap!", :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil nil)}}, :name om.next/update-state!, :variadic true, :file "resources/public/js/om/next.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil nil)}, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil nil), :column 1, :line 565, :end-line 565, :max-fixed-arity 6, :fn-var true, :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3] [component f arg0 arg1 arg2 arg3 & arg-rest]), :doc "Update a component's local state. Similar to Clojure(Script)'s swap!"}, Indexer {:num-fields 2, :protocols #{cljs.core/IRecord om.next.protocols/IIndexer cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name om.next/Indexer, :file "resources/public/js/om/next.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 983, :record true, :end-line 983, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, update-query! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 695, :column 7, :end-line 695, :end-column 20, :arglists (quote ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3 & arg-rest])), :doc "Update a component's query and query parameters with a function.", :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil)}}, :name om.next/update-query!, :variadic true, :file "resources/public/js/om/next.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 6, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2]), :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3 & arg-rest]), :arglists-meta (nil nil nil nil nil)}, :method-params ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil), :column 1, :line 695, :end-line 695, :max-fixed-arity 6, :fn-var true, :arglists ([component f] [component f arg0] [component f arg0 arg1] [component f arg0 arg1 arg2] [component f arg0 arg1 arg2 arg3 & arg-rest]), :doc "Update a component's query and query parameters with a function."}, reduce-union-recursion-depth {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1349, :column 8, :end-line 1349, :end-column 36, :private true, :arglists (quote ([union-expr recursion-key])), :doc "Given a union expression decrement each of the query roots by one if it\n   is recursive."}, :private true, :name om.next/reduce-union-recursion-depth, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 36, :method-params ([union-expr recursion-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1349, :end-line 1349, :max-fixed-arity 2, :fn-var true, :arglists (quote ([union-expr recursion-key])), :doc "Given a union expression decrement each of the query roots by one if it\n   is recursive."}, query-zip {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 54, :column 8, :end-line 54, :end-column 17, :private true, :arglists (quote ([root])), :doc "Return a zipper on a query expression."}, :private true, :name om.next/query-zip, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([root]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([root])), :doc "Return a zipper on a query expression."}, reconciler {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1865, :column 7, :end-line 1865, :end-column 17, :arglists (quote ([{:keys [state shared shared-fn parser indexer ui->props normalize send merge-sends remotes merge merge-tree merge-ident prune-tree optimize history root-render root-unmount pathopt migrate id-key instrument], :or {root-render (fn* [p1__20856# p2__20857#] (js/ReactDOM.render p1__20856# p2__20857#)), prune-tree default-extract-errors, pathopt false, merge-sends (fn* [p1__20854# p2__20855#] (merge-with into p1__20854# p2__20855#)), merge-ident default-merge-ident, remotes [:remote], migrate default-migrate, history 100, merge default-merge, ui->props default-ui->props, indexer om.next/indexer, root-unmount (fn* [p1__20858#] (js/ReactDOM.unmountComponentAtNode p1__20858#)), merge-tree default-merge-tree, optimize (fn [cs] (sort-by depth cs))}, :as config}])), :doc "Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired. The callback should take the response as the\n                     first argument and the the query that was sent as the second\n                     argument.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :logger       - supply a goog.log compatible logger"}, :name om.next/reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([p__20859]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1865, :end-line 1865, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [state shared shared-fn parser indexer ui->props normalize send merge-sends remotes merge merge-tree merge-ident prune-tree optimize history root-render root-unmount pathopt migrate id-key instrument], :or {root-render (fn* [p1__20856# p2__20857#] (js/ReactDOM.render p1__20856# p2__20857#)), prune-tree default-extract-errors, pathopt false, merge-sends (fn* [p1__20854# p2__20855#] (merge-with into p1__20854# p2__20855#)), merge-ident default-merge-ident, remotes [:remote], migrate default-migrate, history 100, merge default-merge, ui->props default-ui->props, indexer om.next/indexer, root-unmount (fn* [p1__20858#] (js/ReactDOM.unmountComponentAtNode p1__20858#)), merge-tree default-merge-tree, optimize (fn [cs] (sort-by depth cs))}, :as config}])), :doc "Construct a reconciler from a configuration map.\n\n   Required parameters:\n     :state        - the application state. If IAtom value is not supplied the\n                     data will be normalized into the default database format\n                     using the root query. This can be disabled by explicitly\n                     setting the optional :normalize parameter to false.\n     :parser       - the parser to be used\n\n   Optional parameters:\n     :shared       - a map of global shared properties for the component tree.\n     :shared-fn    - a function to compute global shared properties from the root props.\n                     the result is merged with :shared.\n     :send         - required only if the parser will return a non-empty value when\n                     run against the supplied :remotes. send is a function of two\n                     arguments, the map of remote expressions keyed by remote target\n                     and a callback which should be invoked with the result from each\n                     remote target. Note this means the callback can be invoked\n                     multiple times to support parallel fetching and incremental\n                     loading if desired. The callback should take the response as the\n                     first argument and the the query that was sent as the second\n                     argument.\n     :normalize    - whether the state should be normalized. If true it is assumed\n                     all novelty introduced into the system will also need\n                     normalization.\n     :remotes      - a vector of keywords representing remote services which can\n                     evaluate query expressions. Defaults to [:remote]\n     :root-render  - the root render function. Defaults to ReactDOM.render\n     :root-unmount - the root unmount function. Defaults to\n                     ReactDOM.unmountComponentAtNode\n     :logger       - supply a goog.log compatible logger"}, *instrument* {:name om.next/*instrument*, :file "resources/public/js/om/next.cljs", :line 30, :column 1, :end-line 30, :end-column 49, :dynamic true, :private true, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 30, :column 37, :end-line 30, :end-column 49, :dynamic true, :private true}}, params {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 177, :column 4, :end-line 177, :end-column 10, :protocol om.next/IQueryParams, :doc "Return the query parameters", :arglists (quote ([this]))}, :protocol om.next/IQueryParams, :name om.next/params, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 177, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Return the query parameters"}, *shared* {:name om.next/*shared*, :file "resources/public/js/om/next.cljs", :line 29, :column 1, :end-line 29, :end-column 45, :dynamic true, :private true, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 29, :column 37, :end-line 29, :end-column 45, :dynamic true, :private true}}, get-indexer {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1168, :column 7, :end-line 1168, :end-column 18, :arglists (quote ([reconciler])), :doc "PRIVATE: Get the indexer associated with the reconciler."}, :name om.next/get-indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1168, :end-line 1168, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "PRIVATE: Get the indexer associated with the reconciler."}, get-props* {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 366, :column 8, :end-line 366, :end-column 18, :private true, :arglists (quote ([x k]))}, :private true, :name om.next/get-props*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([x k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 366, :end-line 366, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x k]))}, focus->path {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 145, :column 8, :end-line 145, :end-column 19, :private true, :arglists (quote ([focus] [focus bound] [focus bound path])), :doc "Given a focused query return the path represented by the query.\n\n   Examples:\n\n     (om.next/focus->path [{:foo [{:bar {:baz []}]}])\n     => [:foo :bar :baz]", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([focus] [focus bound] [focus bound path]), :arglists ([focus] [focus bound] [focus bound path]), :arglists-meta (nil nil nil)}}, :private true, :name om.next/focus->path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([focus] [focus bound] [focus bound path]), :arglists ([focus] [focus bound] [focus bound path]), :arglists-meta (nil nil nil)}, :method-params ([focus] [focus bound] [focus bound path]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 3, :fn-var true, :arglists ([focus] [focus bound] [focus bound path]), :doc "Given a focused query return the path represented by the query.\n\n   Examples:\n\n     (om.next/focus->path [{:foo [{:bar {:baz []}]}])\n     => [:foo :bar :baz]"}, get-params {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 225, :column 7, :end-line 225, :end-column 17, :arglists (quote ([component])), :doc "Return the query params for a component."}, :name om.next/get-params, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Return the query params for a component."}, bind-query {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 204, :column 8, :end-line 204, :end-column 18, :private true, :arglists (quote ([query params]))}, :private true, :name om.next/bind-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 18, :method-params ([query params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 2, :fn-var true, :arglists (quote ([query params]))}, compute-react-key {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 307, :column 8, :end-line 307, :end-column 25, :private true, :arglists (quote ([cl props]))}, :private true, :name om.next/compute-react-key, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 25, :method-params ([cl props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 307, :end-line 307, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cl props]))}, set-prop! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 384, :column 8, :end-line 384, :end-column 17, :private true, :arglists (quote ([c k v])), :doc "PRIVATE: Do not use"}, :private true, :name om.next/set-prop!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([c k v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 384, :end-line 384, :max-fixed-arity 3, :fn-var true, :arglists (quote ([c k v])), :doc "PRIVATE: Do not use"}, *raf* {:name om.next/*raf*, :file "resources/public/js/om/next.cljs", :line 26, :column 1, :end-line 26, :end-column 28, :dynamic true, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 26, :column 23, :end-line 26, :end-column 28, :dynamic true}}, IQueryParams {:meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 176, :column 14, :end-line 176, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {params [[this]]}}}, :protocol-symbol true, :name om.next/IQueryParams, :file "resources/public/js/om/next.cljs", :end-column 26, :column 1, :line 176, :protocol-info {:methods {params [[this]]}}, :info nil, :end-line 176, :impls #{default}, :doc nil, :jsdoc ("@interface")}, state {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 357, :column 8, :end-line 357, :end-column 13, :private true, :arglists (quote ([c]))}, :private true, :name om.next/state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 357, :end-line 357, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, has-error? {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1785, :column 17, :end-line 1785, :end-column 27, :tag boolean, :private true, :arglists (quote ([x]))}, :private true, :name om.next/has-error?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1785, :ret-tag boolean, :end-line 1785, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, schedule-render! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 795, :column 7, :end-line 795, :end-column 23, :arglists (quote ([reconciler]))}, :name om.next/schedule-render!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 795, :end-line 795, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, react-set-state! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 600, :column 7, :end-line 600, :end-column 23, :arglists (quote ([component new-state] [component new-state cb])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component new-state] [component new-state cb]), :arglists ([component new-state] [component new-state cb]), :arglists-meta (nil nil)}}, :name om.next/react-set-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([component new-state] [component new-state cb]), :arglists ([component new-state] [component new-state cb]), :arglists-meta (nil nil)}, :method-params ([component new-state] [component new-state cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 600, :end-line 600, :max-fixed-arity 3, :fn-var true, :arglists ([component new-state] [component new-state cb])}, class-path {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 751, :column 7, :end-line 751, :end-column 17, :arglists (quote ([c]))}, :name om.next/class-path, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 751, :end-line 751, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, transact! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 881, :column 7, :end-line 881, :end-column 16, :arglists (quote ([x tx] [r ref tx])), :doc "Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering.\n\n   Example:\n\n     (om/transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x tx] [r ref tx]), :arglists ([x tx] [r ref tx]), :arglists-meta (nil nil)}}, :name om.next/transact!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x tx] [r ref tx]), :arglists ([x tx] [r ref tx]), :arglists-meta (nil nil)}, :method-params ([x tx] [r ref tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 881, :end-line 881, :max-fixed-arity 3, :fn-var true, :arglists ([x tx] [r ref tx]), :doc "Given a reconciler or component run a transaction. tx is a parse expression\n   that should include mutations followed by any necessary read. The reads will\n   be used to trigger component re-rendering.\n\n   Example:\n\n     (om/transact! widget\n       '[(do/this!) (do/that!)\n         :read/this :read/that])"}, query->ast {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 930, :column 7, :end-line 930, :end-column 17, :arglists (quote ([query-expr])), :doc "Given a query expression convert it into an AST."}, :name om.next/query->ast, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :method-params ([query-expr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 930, :end-line 930, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query-expr])), :doc "Given a query expression convert it into an AST."}, schedule-sends! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 807, :column 7, :end-line 807, :end-column 22, :arglists (quote ([reconciler]))}, :name om.next/schedule-sends!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 807, :end-line 807, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, default-extract-errors {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1788, :column 8, :end-line 1788, :end-column 30, :private true, :arglists (quote ([reconciler res query]))}, :private true, :name om.next/default-extract-errors, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 30, :method-params ([reconciler res query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1788, :end-line 1788, :max-fixed-arity 3, :fn-var true, :arglists (quote ([reconciler res query]))}, basis-t {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 792, :column 8, :end-line 792, :end-column 15, :private true, :arglists (quote ([reconciler]))}, :private true, :name om.next/basis-t, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 792, :end-line 792, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler]))}, roots {:name om.next/roots, :file "resources/public/js/om/next.cljs", :line 25, :column 1, :end-line 25, :end-column 21, :private true, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 25, :column 16, :end-line 25, :end-column 21, :private true}}, *depth* {:name om.next/*depth*, :file "resources/public/js/om/next.cljs", :line 31, :column 1, :end-line 31, :end-column 44, :dynamic true, :private true, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 31, :column 37, :end-line 31, :end-column 44, :dynamic true, :private true}}, add-root! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 813, :column 7, :end-line 813, :end-column 16, :arglists (quote ([reconciler root-class target] [reconciler root-class target options])), :doc "Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([reconciler root-class target] [reconciler root-class target options]), :arglists ([reconciler root-class target] [reconciler root-class target options]), :arglists-meta (nil nil)}}, :name om.next/add-root!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([reconciler root-class target] [reconciler root-class target options]), :arglists ([reconciler root-class target] [reconciler root-class target options]), :arglists-meta (nil nil)}, :method-params ([reconciler root-class target] [reconciler root-class target options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 813, :end-line 813, :max-fixed-arity 4, :fn-var true, :arglists ([reconciler root-class target] [reconciler root-class target options]), :doc "Given a root component class and a target root DOM node, instantiate and\n   render the root class using the reconciler's :state property. The reconciler\n   will continue to observe changes to :state and keep the target node in sync.\n   Note a reconciler may have only one root. If invoked on a reconciler with an\n   existing root, the new root will replace the old one."}, reconciler? {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1955, :column 16, :end-line 1955, :end-column 27, :tag boolean, :arglists (quote ([x])), :doc "Returns true if x is a reconciler."}, :name om.next/reconciler?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1955, :ret-tag boolean, :end-line 1955, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if x is a reconciler."}, get-query {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 260, :column 7, :end-line 260, :end-column 16, :arglists (quote ([x])), :doc "Return a IQuery/IParams instance bound query. Works for component classes\n   and component instances. See also om.next/full-query."}, :name om.next/get-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Return a IQuery/IParams instance bound query. Works for component classes\n   and component instances. See also om.next/full-query."}, ref->components {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1174, :column 7, :end-line 1174, :end-column 22, :arglists (quote ([x ref])), :doc "Return all components for a given ref."}, :name om.next/ref->components, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([x ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1174, :end-line 1174, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x ref])), :doc "Return all components for a given ref."}, ->Reconciler {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1594, :column 12, :end-line 1594, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([config state]))}, :name om.next/->Reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([config state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 1594, :end-line 1594, :max-fixed-arity 2, :fn-var true, :arglists (quote ([config state]))}, merge-joins {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1489, :column 8, :end-line 1489, :end-column 19, :private true, :arglists (quote ([query])), :doc "Searches a query for duplicate joins and deep-merges them into a new query."}, :private true, :name om.next/merge-joins, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1489, :end-line 1489, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query])), :doc "Searches a query for duplicate joins and deep-merges them into a new query."}, Reconciler {:num-fields 2, :protocols #{cljs.core/IRecord om.next.protocols/IReconciler cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name om.next/Reconciler, :file "resources/public/js/om/next.cljs", :end-column 22, :type true, :column 12, :internal-ctor true, :line 1594, :record true, :end-line 1594, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IDeref cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, OmProps {:private true, :num-fields 2, :protocols #{}, :name om.next/OmProps, :file "resources/public/js/om/next.cljs", :end-column 27, :type true, :column 20, :line 294, :record false, :end-line 294, :skip-protocol-flag nil}, transact* {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 846, :column 7, :end-line 846, :end-column 16, :arglists (quote ([r c ref tx]))}, :name om.next/transact*, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([r c ref tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 846, :end-line 846, :max-fixed-arity 4, :fn-var true, :arglists (quote ([r c ref tx]))}, dispatch {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 925, :column 7, :end-line 925, :end-column 15, :arglists (quote ([_ key _])), :doc "Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."}, :name om.next/dispatch, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([_ key _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 925, :end-line 925, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ key _])), :doc "Helper function for implementing :read and :mutate as multimethods. Use this\n   as the dispatch-fn."}, app-state {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1960, :column 7, :end-line 1960, :end-column 16, :arglists (quote ([reconciler])), :doc "Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data."}, :name om.next/app-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([reconciler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1960, :end-line 1960, :max-fixed-arity 1, :fn-var true, :arglists (quote ([reconciler])), :doc "Return the reconciler's application state atom. Useful when the reconciler\n   was initialized via denormalized data."}, -get-state {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 188, :column 4, :end-line 188, :end-column 14, :protocol om.next/ILocalState, :doc "Get the component's local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-get-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 188, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's local state"}, factory {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 314, :column 7, :end-line 314, :end-column 14, :arglists (quote ([class] [class {:keys [validator keyfn], :as opts}])), :doc "Create a factory constructor from a component class created with\n   om.next/defui.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :arglists-meta (nil nil)}}, :name om.next/factory, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :arglists-meta (nil nil)}, :method-params ([class] [class {:keys [validator keyfn], :as opts}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 2, :fn-var true, :arglists ([class] [class {:keys [validator keyfn], :as opts}]), :doc "Create a factory constructor from a component class created with\n   om.next/defui."}, -get-rendered-state {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 189, :column 4, :end-line 189, :end-column 23, :protocol om.next/ILocalState, :doc "Get the component's rendered local state", :arglists (quote ([this]))}, :protocol om.next/ILocalState, :name om.next/-get-rendered-state, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Get the component's rendered local state"}, parser {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 918, :column 7, :end-line 918, :end-column 13, :arglists (quote ([{:keys [read mutate], :as opts}])), :doc "Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult)."}, :name om.next/parser, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([p__20377]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 918, :end-line 918, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [read mutate], :as opts}])), :doc "Create a parser. The argument is a map of two keys, :read and :mutate. Both\n   functions should have the signature (Env -> Key -> Params -> ParseResult)."}, merge-pending-state! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 590, :column 8, :end-line 590, :end-column 28, :private true, :arglists (quote ([c]))}, :private true, :name om.next/merge-pending-state!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 28, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 590, :end-line 590, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, merge-pending-props! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 422, :column 8, :end-line 422, :end-column 28, :private true, :arglists (quote ([c]))}, :private true, :name om.next/merge-pending-props!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 28, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 422, :end-line 422, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, sift-idents {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1335, :column 8, :end-line 1335, :end-column 19, :private true, :arglists (quote ([res]))}, :private true, :name om.next/sift-idents, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1335, :end-line 1335, :max-fixed-arity 1, :fn-var true, :arglists (quote ([res]))}, nil-or-map? {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 36, :column 16, :end-line 36, :end-column 27, :tag boolean, :arglists (quote ([x]))}, :name om.next/nil-or-map?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 27, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :ret-tag boolean, :end-line 36, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x]))}, writer {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 2004, :column 7, :end-line 2004, :end-column 13, :arglists (quote ([] [opts])), :doc "Create a Om Next transit writer. This writer can handler the tempid type.\n   Can pass transit writer customization opts map.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}}, :name om.next/writer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :method-params ([] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 2004, :end-line 2004, :max-fixed-arity 1, :fn-var true, :arglists ([] [opts]), :doc "Create a Om Next transit writer. This writer can handler the tempid type.\n   Can pass transit writer customization opts map."}, get-class-or-instance-query {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 249, :column 8, :end-line 249, :end-column 35, :private true, :arglists (quote ([x])), :doc "Return a IQuery/IParams local bound query. Works for component classes\n   and component instances. Does not use the indexer."}, :private true, :name om.next/get-class-or-instance-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 35, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 249, :end-line 249, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Return a IQuery/IParams local bound query. Works for component classes\n   and component instances. Does not use the indexer."}, *logger* {:name om.next/*logger*, :file "resources/public/js/om/next.cljs", :line 17, :column 1, :end-line 17, :end-column 18, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 17, :column 10, :end-line 17, :end-column 18}}, merge-idents {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1540, :column 8, :end-line 1540, :end-column 20, :private true, :arglists (quote ([tree config refs query]))}, :private true, :name om.next/merge-idents, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 20, :method-params ([tree config refs query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1540, :end-line 1540, :max-fixed-arity 4, :fn-var true, :arglists (quote ([tree config refs query]))}, indexer {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1153, :column 7, :end-line 1153, :end-column 14, :arglists (quote ([] [extfs])), :doc "Given a function (Component -> Ref), return an indexer.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [extfs]), :arglists ([] [extfs]), :arglists-meta (nil nil)}}, :name om.next/indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [extfs]), :arglists ([] [extfs]), :arglists-meta (nil nil)}, :method-params ([] [extfs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1153, :end-line 1153, :max-fixed-arity 1, :fn-var true, :arglists ([] [extfs]), :doc "Given a function (Component -> Ref), return an indexer."}, subquery {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 767, :column 7, :end-line 767, :end-column 15, :arglists (quote ([x subquery-ref subquery-class])), :doc "Given a class or mounted component x and a ref to an instantiated component\n   or class that defines a subquery, pick the most specific subquery. If the\n   component is mounted subquery-ref will be used, subquery-class otherwise."}, :name om.next/subquery, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 15, :method-params ([x subquery-ref subquery-class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 767, :end-line 767, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x subquery-ref subquery-class])), :doc "Given a class or mounted component x and a ref to an instantiated component\n   or class that defines a subquery, pick the most specific subquery. If the\n   component is mounted subquery-ref will be used, subquery-class otherwise."}, reader {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1998, :column 7, :end-line 1998, :end-column 13, :arglists (quote ([] [opts])), :doc "Create a Om Next transit reader. This reader can handler the tempid type.\n   Can pass transit reader customization opts map.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}}, :name om.next/reader, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [opts]), :arglists ([] [opts]), :arglists-meta (nil nil)}, :method-params ([] [opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1998, :end-line 1998, :max-fixed-arity 1, :fn-var true, :arglists ([] [opts]), :doc "Create a Om Next transit reader. This reader can handler the tempid type.\n   Can pass transit reader customization opts map."}, component? {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 350, :column 16, :end-line 350, :end-column 26, :tag boolean, :arglists (quote ([x])), :doc "Returns true if the argument is an Om component."}, :name om.next/component?, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 26, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 350, :ret-tag boolean, :end-line 350, :max-fixed-arity 1, :tag boolean, :fn-var true, :arglists (quote ([x])), :doc "Returns true if the argument is an Om component."}, remove-root! {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 828, :column 7, :end-line 828, :end-column 19, :arglists (quote ([reconciler target])), :doc "Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root."}, :name om.next/remove-root!, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([reconciler target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 828, :end-line 828, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconciler target])), :doc "Remove a root target (a DOM element) from a reconciler. The reconciler will\n   no longer attempt to reconcile application state with the specified root."}, ident {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 174, :column 4, :end-line 174, :end-column 9, :protocol om.next/Ident, :doc "Return the ident for this component", :arglists (quote ([this props]))}, :protocol om.next/Ident, :name om.next/ident, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 9, :method-params ([this props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 174, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this props])), :doc "Return the ident for this component"}, react-ref {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 727, :column 7, :end-line 727, :end-column 16, :arglists (quote ([component name])), :doc "Returns the component associated with a component's React ref."}, :name om.next/react-ref, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 16, :method-params ([component name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 727, :end-line 727, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component name])), :doc "Returns the component associated with a component's React ref."}, tempid {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1988, :column 7, :end-line 1988, :end-column 13, :arglists (quote ([] [id])), :doc "Return a temporary id.", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}}, :name om.next/tempid, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [id]), :arglists ([] [id]), :arglists-meta (nil nil)}, :method-params ([] [id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1988, :end-line 1988, :max-fixed-arity 1, :fn-var true, :arglists ([] [id]), :doc "Return a temporary id."}, get-reconciler {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 389, :column 8, :end-line 389, :end-column 22, :private true, :arglists (quote ([c]))}, :private true, :name om.next/get-reconciler, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 389, :end-line 389, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, map->Indexer {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 983, :column 12, :end-line 983, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__20395]))}, :name om.next/map->Indexer, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 19, :method-params ([G__20395]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 983, :end-line 983, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__20395]))}, transform-reads {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 617, :column 7, :end-line 617, :end-column 22, :arglists (quote ([r tx])), :doc "Given r (a reconciler) and a query expression including a mutation and\n   any simple reads, return the equivalent query expression where the simple\n   reads have been replaced by the full query for each component that cares about\n   the specified read."}, :name om.next/transform-reads, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 22, :method-params ([r tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 617, :end-line 617, :max-fixed-arity 2, :fn-var true, :arglists (quote ([r tx])), :doc "Given r (a reconciler) and a query expression including a mutation and\n   any simple reads, return the equivalent query expression where the simple\n   reads have been replaced by the full query for each component that cares about\n   the specified read."}, shared {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 473, :column 7, :end-line 473, :end-column 13, :arglists (quote ([component] [component k-or-ks])), :doc "Return the global shared properties of the Om Next root. See :shared and\n   :shared-fn reconciler options.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}}, :name om.next/shared, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component k-or-ks]), :arglists ([component] [component k-or-ks]), :arglists-meta (nil nil)}, :method-params ([component] [component k-or-ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 473, :end-line 473, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component k-or-ks]), :doc "Return the global shared properties of the Om Next root. See :shared and\n   :shared-fn reconciler options."}, depth {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 450, :column 8, :end-line 450, :end-column 13, :private true, :arglists (quote ([component])), :doc "PRIVATE: Returns the render depth (a integer) of the component relative to\n  the mount root."}, :private true, :name om.next/depth, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 13, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 450, :end-line 450, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "PRIVATE: Returns the render depth (a integer) of the component relative to\n  the mount root."}, cascade-query {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 942, :column 8, :end-line 942, :end-column 21, :private true, :arglists (quote ([class-path->query classpath data-path new-query union-keys])), :doc "Cascades a query up the classpath. class-path->query is a map of classpaths\n   to their queries. classpath is the classpath where we start cascading (typically\n   the direct parent's classpath of the component changing query). data-path is\n   the data path in the classpath's query to the new query. new-query is the\n   query to be applied to the classpaths. union-keys are any keys into union\n   queries found during index building; they are used to access union queries\n   when cascading the classpath, and to generate the classpaths' rendered-paths,\n   which skip these keys."}, :private true, :name om.next/cascade-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 21, :method-params ([class-path->query classpath data-path new-query union-keys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 942, :end-line 942, :max-fixed-arity 5, :fn-var true, :arglists (quote ([class-path->query classpath data-path new-query union-keys])), :doc "Cascades a query up the classpath. class-path->query is a map of classpaths\n   to their queries. classpath is the classpath where we start cascading (typically\n   the direct parent's classpath of the component changing query). data-path is\n   the data path in the classpath's query to the new query. new-query is the\n   query to be applied to the classpaths. union-keys are any keys into union\n   queries found during index building; they are used to access union queries\n   when cascading the classpath, and to generate the classpaths' rendered-paths,\n   which skip these keys."}, ILocalState {:meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 186, :column 14, :end-line 186, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {-set-state! [[this new-state]], -get-state [[this]], -get-rendered-state [[this]], -merge-pending-state! [[this]]}}}, :protocol-symbol true, :name om.next/ILocalState, :file "resources/public/js/om/next.cljs", :end-column 25, :column 1, :line 186, :protocol-info {:methods {-set-state! [[this new-state]], -get-state [[this]], -get-rendered-state [[this]], -merge-pending-state! [[this]]}}, :info nil, :end-line 186, :impls #{}, :doc nil, :jsdoc ("@interface")}, full-query {:protocol-inline nil, :meta {:file "/home/fede/smallProjects/om-tutorial/resources/public/js/om/next.cljs", :line 1202, :column 7, :end-line 1202, :end-column 17, :arglists (quote ([component] [component query])), :doc "Returns the absolute query for a given component, not relative like\n   om.next/get-query.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component query]), :arglists ([component] [component query]), :arglists-meta (nil nil)}}, :name om.next/full-query, :variadic false, :file "resources/public/js/om/next.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([component] [component query]), :arglists ([component] [component query]), :arglists-meta (nil nil)}, :method-params ([component] [component query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1202, :end-line 1202, :max-fixed-arity 2, :fn-var true, :arglists ([component] [component query]), :doc "Returns the absolute query for a given component, not relative like\n   om.next/get-query."}}, :require-macros {om.next om.next}, :cljs.analyzer/constants {:seen #{indexes :query-root x :remote :tempids :normalized query :errors fn? :children :remove :pathopt vector? :id-key :tree :instrument :react-key subquery-ref :pre :read :key :not-mergeable :merge-ident :om.next/queries reads :else props :merge-sends :ref :config :queue :validator :index-component :sends-queued :remotes subquery-class :migrate * iquery? :mutator map? :reconciler c' :params :history string? :type :last-ident :keyfn :state :queued-sends :prop->classes keyword? :query-by-join _ validator :component config :ref->components :om.next/tables :merge :om.next/no-queries :queued refs :class->components sel or :error/invalid-expression :shared-fn m reconciler params :factory :render :parser :keys :ui->props nil? :next not :root :class state component :logger :indexer :root-unmount basis-t :drop-component :extfs reconciler? :dispatch-key :om-path :send :om.next/not-found :shared :merge-tree :optimize c :t tx :om.next/computed :indexes :elements-seen :target :data-path->components quote :root-render :query class :om.next/error :rewrite extfs opts :class-path->query :normalize component? root-class :mutate :none :om.next/skip :prune-tree :props :om/tag}, :order [_ :else :type :error/invalid-expression * :config :state :om.next/queries :query :params :component nil? c' c :class-path->query props basis-t :react-key :om-path :validator :keyfn fn? class validator :props :children :class :factory :ref component? component :om.next/computed :parser :key :target or reconciler? x not params query reads vector? :root :history :logger :remotes :pre keyword? subquery-ref string? subquery-class m reconciler root-class :shared :pathopt :reconciler :mutator tx iquery? :read :mutate map? opts :dispatch-key :data-path->components :prop->classes :index-component :class->components :ref->components :drop-component :om.next/not-found :indexes :extfs indexes extfs :indexer :om.next/no-queries :om/tag :om.next/tables refs :none :last-ident :query-root :elements-seen :query-by-join :not-mergeable :rewrite :merge-ident :normalize :merge-tree :keys :next :tempids :merge :migrate :id-key :queue :queued-sends :merge-sends :sends-queued :send :queued :render :om.next/skip :ui->props :optimize :t :normalized :shared-fn :instrument :root-render sel :remove :root-unmount config state :om.next/error :tree :errors :prune-tree :remote quote]}, :doc nil}